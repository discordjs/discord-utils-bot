[botception]
keywords = ["botception"]
content = """
It's good practice to make your bots ignore other bots, including itself. This can be done through a single line of code:
```js
if (<message>.author.bot) return;
```
<message> being whatever you defined message as.
"""

[bot-about-me]
keywords = ["bot-about-me", "bam"]
content = """
To add text to the `About Me` section of your bot's profile, head [here](<https://discord.com/developers/applications>), click on your bot's application, and fill in the `Description`. The description supports full markdown as well (bold, underline, etc.).
https://imgur.com/zqsWi2d.jpg
"""

[api-docs]
keywords = ["api-docs", "apidocs"]
content = """
The official Discord API documentation: [click](<https://discord.com/developers/docs/intro>)
"""

[api-down]
keywords = ["api-down", "apisucc", "api-succe", "apidown", "api-status", "apin't", "outage"]
content = """
Guilds not online, bot login not resolving, can't send messages?
Discord might be having API issues! Check the [Discord API status](<https://discordstatus.com>) for more information.
"""

[markdown]
keywords = ["markdown", "md"]
content = """
Using markdown in Discord to spice up your messages:
‚Ä¢ [Discord support article](<https://support.discord.com/hc/articles/210298617>) 
‚Ä¢ [Gist with examples](<https://gist.github.com/matthewzring/9f7bbfd102003963f9be7dbcf7d40e51>)
"""

[quotes]
keywords = ["quotes", ">", ">-quote", ">>>-quote"]
content = """
‚Ä¢ `> text`: single line blockquote
‚Ä¢ `>>> text`: quote until the end of the message 
"""

[selectmenu-limits]
keywords = ["selectmenu-limits", "sm-limits", "select-menu-limits"]
content = """
Limits for select menus:
‚Ä¢ [Discord Developer Documentation](<https://discord.com/developers/docs/interactions/message-components#select-menus>)
"""

[filesystem]
keywords = ["filesystem", "fs", "files-system", "filesystem", "writefile", "readfile", "write-file", "read-file"]
content = """
Reading from and writing to files with nodes fs module: [learn more](<https://nodejs.org/api/fs.html#fs_file_system>)
"""

[message-formatting]
keywords = ["message-formatting", "messageformatting", "message-formats", "formats", "emoji-format", "timestamp-format", "date-format"]
content = """
Message formatting (mentions, timestamps, emoji, etc.): [learn more](<https://discord.com/developers/docs/reference#message-formatting>)
"""

[pm2]
keywords = ["pm2", "restart"]
content = """
Manage your application state with pm2 so you can restart, stop and delete processes dynamically: [learn more](<https://discordjs.guide/improving-dev-environment/pm2.html>)
"""

[node-opus]
keywords = ["node-opus", "discordjs/opus", "opus-windows"]
content = """
    **__Installing @discordjs/opus on Windows__**
    ‚Ä¢ Open Command Prompt or PowerShell as Administrator
    ‚Ä¢ `npm i windows-build-tools --production --vs2015 --add-python-to-PATH --global`
    ‚Ä¢ Close the Command Prompt/PowerShell window.
    ‚Ä¢ Go to your working directory (where you use `node bot.js`).
    ‚Ä¢ Hold `Shift + Right-Click` then select "Open command window here" or "Open PowerShell window here"
    ‚Ä¢ `npm i @discordjs/opus`
"""

[hierarchy]
keywords = ["hierarchy", "roleorder"]
content = """
‚Ä¢ Bots cannot moderate (kick/ban/nickname/...) a target with a higher or equally high highest role or the guild owner.
‚Ä¢ Bots cannot modify (edit/add/remove) roles that are higher or equally high compared to the bot's highest role.
‚Ä¢ The `Administrator` permission does not skip these checks.
"""

[edit-channel]
keywords = ["edit-channel", "editchannel", "channel-topic", "channel-name", "channel-limits"]
content = """
Channel name and topic changes are limited to roughly 2 times per 10 minutes.
If your channel changes are not going through, this might be why.
"""

[token-regen]
keywords = ["token-regen", "token-refresh"]
content = """
> All my bot tokens are refreshing non stop!
Discord does not actually store any tokens in their database. Whenever you visit the page it will generate a new token for you.
Unless you press the "generate new token" button all of these tokens are valid.
"""

[faq]
keywords = ["faq", "frequently-asked-questions", "guide-faq", "guidefaq"]
content = """
**F**requently **A**sked **Q**uestions: [learn more](<https://discordjs.guide/popular-topics/faq>)
"""
hoisted = true

[avatars]
keywords = ["avatars", "avatar-methods", "avatarmethods"]
content = """
‚Ä¢ `User#avatarURL()` global custom avatar, if set
‚Ä¢ `User#defaultAvatarURL` default avatar (clyde with colored background)
‚Ä¢ `User#displayAvatarURL()` global custom avatar or default avatar, if none
‚Ä¢ `GuildMember#avatarURL()` guild specific avatar, if set
"""

[node-events]
keywords = ["node-events", "nodeevents", "events"]
content = """
‚Ä¢ Node event API: [learn more](<https://nodejs.org/api/events.html#events_events>)
‚Ä¢ Node event loop: [learn more](<https://nodejs.org/uk/docs/guides/event-loop-timers-and-nexttick>)
"""

[spoiler]
keywords = ["spoiler", "spoilers", "image-spoilers", "spoodler"]
content = """
‚Ä¢ Text: `|| spoiler text ||` ‚ûû || spoiler text ||
‚Ä¢ Image: add `SPOILER_` to the beginning of the filename
"""

[beautify]
keywords = ["beautify", "beautifyer", "indents"]
content = """
To make your code more readable (and easier for us to help you with) consider using a beautifier.
‚Ä¢ Quick online tool: [beautifier.io](<https://beautifier.io>)
‚Ä¢ Script and Editor integrations: [prettier](<https://prettier.io/docs/en/editors.html>)
"""

[docs]
keywords = ["docs", "djsdocs", "thedocs", "documentation"]
content = """
discord.js documentation:
‚Ä¢ stable release: [learn more](<https://discord.js.org/#/docs/discord.js/stable/general/welcome>)
‚Ä¢ developer release: [learn more](<https://discord.js.org/#/docs/discord.js/main/general/welcome>)
"""

[snipe]
keywords = ["snipe", "snipe-command", "snipe-commands", "snipecommands"]
content = """
Snipe commands are widely considered a violation of user privacy. If a message is deleted it should stay that way.
‚Ä¢ Logs for moderation purposes are fine
‚Ä¢ Bringing back a deleted message by just anyone to expose or humiliate a user is not
"""

[specific-channel]
keywords = ["specific-channel", "specificchannel", "pick-channel"]
content = """
```js
const channel = client.channels.cache.get("222086648706498562");
const channel = guild.channels.cache.find(channel => channel.name === "general");
```
‚Ä¢ Caches in discord.js are [Collections](<https://discord.js.org/#/docs/collection/main/class/Collection>) which extend the native [Map](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map>) structure.
‚Ä¢ [learn more](<https://discordjs.guide/additional-info/collections.html>)
"""

[node-version]
keywords = ["node-version", "nv", "flat", "fields-flat", "catch-{", "update-node", "abortcontroller"]
content = """
Please update Node.js to version 16.9.0 or newer!
‚Ä¢ [Download](<https://nodejs.org/en/download>)
‚Ä¢ [Linux (nodesource)](<https://github.com/nodesource/distributions>)
"""

[bug]
keywords = ["bug", "ü™≤", "üêû", "üêõ", "bugs", "report-bugs", "djs-bug", "discord.js-bug"]
content = """
Found a bug in discord.js?
‚Ä¢ Please discuss your bug in support channels first, if you are unsure about it
‚Ä¢ Confirm the bug still happens after updating to the latest development release `npm i discord.js@dev`
‚Ä¢ [Open an issue on GitHub](<https://github.com/discordjs/discord.js/issues/new/choose>) and fill out the given template
"""

[logit]
keywords = ["logit", "log-it", "debuglogs", "debug-log", "console.log", "consolelog", "console-log", "clog", "no-error", "noerror", "no-errors", "clg"]
content = """
If you aren't getting any errors, try to place `console.log` checkpoints throughout your code to find out where execution stops.
‚Ä¢ Once you do, log relevant values and if-conditions
‚Ä¢ More sophisticated debugging methods are breakpoints and runtime inspections: [learn more](<https://code.visualstudio.com/docs/nodejs/nodejs-debugging>)
"""
hoisted = true

[rpc-bot]
keywords = ["rpc-bot", "rich-presence-bot", "rpb", "bot-rpc"]
content = """
‚Ä¢ "Can I use Rich Presence for my bot?" - No.
‚Ä¢ "Will I ever be able to use Rich Presence for my Bot?" - Ask Discord.
"""

[buildtools]
keywords = ["buildtools", "windows-build-tools", "build-tools", "node-gyp", "gyp", "wbt"]
content = """
‚Ä¢ Run `npm i windows-build-tools --production --vs2015 --add-python-to-PATH --global` as admin.
‚Ä¢ Restart your terminal or machine (if terminal is not sufficient).
"""

[get-undefined]
keywords = ["get-undefined"]
content = """
‚Ä¢ The provided id is incorrect (copy role ids from context menus, not message mentions)
‚Ä¢ The client does not have this structure cached (try fetching instead)
‚Ä¢ The client is not yet ready (move the code into any event listener callback)
"""

[invalid-interaction]
keywords = ["invalid-interaction", "invalid-command", "invalid-interaction-command", "inv-command"]
content = """
`Invalid interaction application command`:
‚Ä¢ After updating a global command Discord prevents you from receiving stale data until the update rolled out
‚Ä¢ Refresh your commandlist to receive the updated command and try again
"""

[canary]
keywords = ["canary", "discord-canary"]
content = """
The "canary" client is Discord's public test build.
‚Ä¢ Install: [win](<https://discord.com/api/downloads/distributions/app/installers/latest?platform=win&channel=canary&arch=x86>) | [osx](<https://discord.com/api/download/canary?platform=osx>) | linux ([deb](<https://discord.com/api/download/canary?platform=linux&format=deb>) | [tar.gz](<https://discord.com/api/download/canary?platform=linux&format=tar.gz>)) 
‚Ä¢ Report Discord client bugs: <https://dis.gd/bugreport>
"""

[snowflake]
keywords = ["snowflake", "‚ùÑ", "discord-snowflake", "discord-id", "snowflakes"]
content = """
‚Ä¢ Discord ids follow the snowflake format: [learn more](<https://discord.com/developers/docs/reference#snowflakes>)
‚Ä¢ Discord ids must be represented as strings as they are larger than `Number.MAX_SAFE_INTEGER`, the largest integer that can be represented in JavaScript
```diff
- client.guilds.cache.get(123456789012345678)
+ client.guilds.cache.get("123456789012345678")
```
"""

[typescript]
keywords = ["typescript", "ts", "type-script", "typings"]
content = """
TypeScript (TS) is a typed superset of JavaScript that compiles to plain JavaScript
‚Ä¢ [website](<https://www.typescriptlang.org/index.html>) | [GitHub](<https://github.com/microsoft/TypeScript>) | [book](<https://basarat.gitbooks.io/typescript/>)
"""

[devmode]
keywords = ["devmode", "developermode", "developer-mode", "copy-id", "get-id", "role-id"]
content = """
Enable developer mode to gain access to the "copy id" context menu: [learn more](<https://support.discord.com/hc/articles/206346498>)
‚Ä¢ copy role ids from context menus (guild settings, user profiles) not message mentions!
"""

[token-reset]
keywords = ["token-reset", "tokenreset", "reset-token", "token-danger", "token-compromised", "regen-token", "token-leak", "tokenleak"]
content = """
‚Ä¢ Visit the [Discord developer application dashboard](<https://discord.com/developers/applications>) and select the corresponding application
‚Ä¢ Click on "Bot" on the left side
‚Ä¢ Click the "Reset Token" button and (if enabled) enter your 2FA code on the popup
"""

[allowed-mentions]
keywords = ["allowed-mentions", "enable-mentions", "disable-mentions", "allow-mentions"]
content = """
You can control which entities receive notifications via the `allowedMentions` option. You can:
‚Ä¢ Set a [default on the client](<https://discord.js.org/#/docs/discord.js/stable/typedef/ClientOptions>)
‚Ä¢ Set for a [specific message](<https://discord.js.org/#/docs/discord.js/stable/typedef/MessageMentionOptions>)
‚Ä¢ Use the `repliedUser` key to disable [in-line reply mentions](<https://discord.js.org/#/docs/discord.js/stable/typedef/MessageMentionOptions>)
```js
{ ..., allowedMentions: { parse: ["users", "roles"] } }
```
"""

[escape-emojis]
keywords = ["escape-emojis", "emoji-id"]
content = """
‚Ä¢ Custom emojis: `\\:name:` ‚ûû `<a:name:id>`
‚Ä¢ Twemojis: `\\:name:` ‚ûû unicode representation
‚Ä¢ Emoji picker: `WIN` + `.` / `CMD` + `CTRL` + `SPACE` / `CTRL` + `.` 
‚Ä¢ Right-clicking any emoji will not copy its id!
"""

[dev-tos]
keywords = ["dev-tos", "devtos", "developer-terms-of-service"]
content = """
‚Ä¢ Discord developer ToS: [learn more](<https://discord.com/developers/docs/legal>)
‚Ä¢ ToS Q&A summary: [learn more](<https://gist.github.com/meew0/a3168b8fbb02d5a5456a06461b9e829e>)
"""

[notation]
keywords = ["notation", "<>", "understanding-notation", "notation-guide"]
content = """
Explaining `<Class>` and `Class#method` notation: [learn more](<https://discordjs.guide/additional-info/notation.html>)
"""

[collection]
keywords = ["collection", "collections", "collection-methods"]
content = """
discord.js uses [Collection](<https://discord.js.org/#/docs/collection/stable/class/Collection>), an extension of the JS native [Map](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map>) structure.
‚Ä¢ Guide: [learn more](<https://discordjs.guide/additional-info/collections.html>) [üç™](<https://gist.github.com/almostSouji/71a33e5f8e84a0960b4ed3a1609915f5>)
"""
hoisted = true

[ffmpeg]
keywords = ["ffmpeg"]
content = """
‚Ä¢ npm: `npm install ffmpeg-static`
‚Ä¢ Install: [Download](<https://www.ffmpeg.org>) | [chocolatey](<https://chocolatey.org>) | [homebrew](<https://brew.sh>) | your distributions package manager
‚Ä¢ Tutorial: [YouTube](<https://www.youtube.com/watch?v=SW-iKrT_nJs>)
‚Ä¢ ffmpeg-binaries is [deprecated](<https://www.npmjs.com/package/ffmpeg-binaries>), uninstall it with `npm rm ffmpeg-binaries`
"""

[joinroles]
keywords = ["joinroles", "join-roles", "autoroles", "auto-role"]
content = """
Join roles have often unwanted side effects!
‚Ä¢ Assigning a role bypasses verification and security features on Discord
‚Ä¢ Can quickly become API spam and hit rate limits rapidly
‚Ä¢ The server depends on the bot being online and the API to be functional
The `@everyone` role is much better suited for announcements
"""

[fetch]
keywords = ["fetch", "undici", "node-fetch", "http-requests", "call-rest-apis"]
content = """
Making HTTP requests (for example to call rest APIs)
‚Ä¢ Node: [learn more](<https://www.npmjs.com/package/undici>)
‚Ä¢ MDN: [learn more](<https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API>) 
"""

[opus]
keywords = ["opus", "opus-machine"]
content = """
`Error: Couldn't find an Opus engine.`
‚Ä¢ Opus: `npm i @discordjs/opus` *(requires build tools: compiler collection and python 2.x)*
‚Ä¢ Opusscript: `npm i opusscript` *(significantly less efficient, not recommended for production)*
"""

[undefined]
keywords = ["undefined", "not-defined", "of-null", "of-undefined", "ofnull", "ofundefined"]
content = """
‚Ä¢ `ReferenceError: "x" is not defined`: [learn more](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Not_defined>)
‚Ä¢ `TypeError: Cannot read properties of undefined/null (reading "x")`: [learn more](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Cant_access_property>)
"""
hoisted = true

[oauth]
keywords = ["oauth", "oauth2", "oa", "oa2"]
content = """
Oauth is about giving access to your stuff without sharing your identity
‚Ä¢ [oauth.net](<https://oauth.net/code/nodejs>) | [Discord API](<https://discord.com/developers/docs/topics/oauth2>) | [guide example](<https://discordjs.guide/oauth2>)
"""

[masked-links]
keywords = ["masked-links", "embed-links", "embedlinks", "inline-links"]
content = """
You can use markdown syntax to display clickable links in embeds, webhook messages and interaction responses without showing the url:
```markdown
"[text](url)"
'[text](url "optional hovertext")'
"[text](url 'optional hovertext')"
```
‚Ä¢ Embeds only support this in description and field values
"""

[no-dm]
keywords = ["no-dm", "cannot-send", "can't-send"]
content = """
`DiscordAPIError: Cannot send messages to this user`
Your bot is trying to send a DM to a user, but failed to do so:
‚Ä¢ The user has DMs disabled or the bot blocked
‚Ä¢ The user no longer shares a guild with the bot (make sure to send informational DMs before banning/kicking)
‚Ä¢ The bot is trying to DM itself or another bot
Note: You cannot check if you can send a DM beforehand but have to handle the [rejection case](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch>)
"""

[path]
keywords = ["path", "paths", "relative-path", "absolute-path", "path-types", "file-path", "filepath"]
content = """
‚Ä¢ File paths explained in detail: [learn more](<https://desktop.arcgis.com/en/arcmap/10.3/tools/supplement/pathnames-explained-absolute-relative-unc-and-url.htm>)
‚Ä¢ `.` refers to the current directory
‚Ä¢ `..` refers to the parent directory
‚Ä¢ Node path module: [learn more](<https://nodejs.org/api/path.html#path_path_join_paths>)
"""

[database]
keywords = ["database", "databases", "postgres", "maria", "mysql", "sql", "nosql", "mongo", "db"]
content = """
Persisting data through restarts requires a database. Check out the resources below to figure out which database fits your use case
‚Ä¢ PostgreSQL: [learn more](<https://www.postgresql.org>) | [tutorial](<http://www.postgresqltutorial.com>)
‚Ä¢ MariaDB: [learn more](<https://mariadb.org/>)
‚Ä¢ MongoDB: [learn more](<https://www.mongodb.com>) | [tutorials](<https://docs.mongodb.com/manual/tutorial>)
‚Ä¢ SQLite: [learn more](<https://www.sqlite.org/index.html>) | [tutorial](<https://www.sqlitetutorial.net/>)
"""

[wait]
keywords = ["wait", "delay", "sleep", "setTimeout"]
content = """
```js
const { setTimeout } = require('timers/promises');
// using async/await
await setTimeout(5000);
...
// using then-callbacks
setTimeout(5000).then(() => { ... });
```
"""

[sharding]
keywords = ["sharding", "sharding-types", "when-to-shard", "wts"]
content = """
‚Ä¢ Necessary at 2,500 guilds (Discord will not let your bot connect)
‚Ä¢ Internal sharding:
```js
const client = new Discord.Client({ shards: 'auto' }); // auto shards
const client = new Discord.Client({ shards: [0, 1] }); // specific shards
```
‚Ä¢ Sharding manager: [learn more](<https://discord.js.org/#/docs/discord.js/stable/class/ShardingManager>)
"""

[2fa]
keywords = ["2fa", "2-factor-auth", "two-factor-auth", "2-factor-authentification"]
content = """
`DiscordAPIError: Two factor is required for this operation`
Elevated permissions are required to execute this action. You need to activate 2FA on your developer account in order to do this with the bot.
‚Ä¢ Elevated permissions: [learn more](<https://discordjs.guide/popular-topics/permissions-extended.html#elevated-permissions>)
‚Ä¢ Setting up 2FA: [learn more](<https://support.discord.com/hc/articles/219576828>)
"""

[embed-limits]
keywords = ["embed-limits", "embedlimits"]
content = """
Limits for embed structures:
‚Ä¢ [Discord Developer Documentation](<https://discord.com/developers/docs/resources/channel#embed-object-embed-limits>)
"""

[matching-parameters]
keywords = ["matching-parameters", "params", "matching-params", "parameters"]
content = """
The order of function parameters must match between definition and function call.
```js
function execute(client, message, args) { ... };
execute(message, client, args);
```
‚Ä¢ mismatch! you pass a Message where the client is expected
‚Ä¢ mismatch! you pass the Client where a Message is expected
"""

[mass-dm]
keywords = ["mass-dm", "massdm", "dmall", "dmal-all"]
content = """
Mass DMing users is not allowed as per developer ToS, considered spam and can get you and your bot banned.
‚Ä¢ Mention `@everyone` to inform all your users at once instead
‚Ä¢ Discord Developer Terms of Service: [learn more](<https://discordapp.com/developers/docs/legal>) | [FAQ summary](<https://gist.github.com/meew0/a3168b8fbb02d5a5456a06461b9e829e>)
"""
[send]
keywords = ["send", "v13send", "v13-send"]
content = """
Sending and editing now takes only a single object parameter!
```diff
- channel.send(embed);
+ channel.send({ embeds: [embed, embed2] });
- channel.send('Hello!', { embed });
+ channel.send({ content: 'Hello!', embeds: [embed, embed2] });
```
‚Ä¢ V12-v13 migration guide: [learn more](<https://discordjs.guide/additional-info/changes-in-v13.html>)
‚Ä¢ V13-v14 migration guide: [learn more](<https://discordjs.guide/additional-info/changes-in-v14.html>)
"""

[codeblock]
keywords = ["codeblock", "code-block", "code-blocks", "cb", "code-box", "codebox"]
content = """
**Codeblocks:**
\\`\\`\\`js
const Discord = require("discord.js"); 
// further code
\\`\\`\\`
becomes
```js
const Discord = require("discord.js"); 
// further code
```
**Inline Code:**
\\`console.log('inline!');\\` becomes `console.log('inline!');`
"""

[node-modules]
keywords = ["node-modules", "modules", "nodemodules"]
content = """
Managing modular code made easy:
‚Ä¢ Node.js at scale: [learn more](<https://blog.risingstack.com/node-js-at-scale-module-system-commonjs-require/>)
‚Ä¢ Node.js module documentation: [learn more](<https://nodejs.org/api/modules.html#modules_modules>)
"""

[bot-invite]
keywords = ["bot-invite", "botinvite", "invitelink"]
content = """
Bot invite structure:
```prolog
https://discord.com/oauth2/authorize?client_id=CLIENT_ID&scope=bot&permissions=0
```
‚Ä¢ `CLIENT_ID` needs to be replaced with your bot id
‚Ä¢ Permission calculator: [learn more](<https://finitereality.github.io/permissions-calculator>)
‚Ä¢ `bot` scope includes `applications.commands`. If you don't need the bot, use `applications.commands` instead
‚Ä¢ You can use #generateInvite instead: [learn more](<https://discord.js.org/#/docs/discord.js/stable/class/Client?scrollTo=generateInvite>)
"""

[version]
keywords = ["version", "discord.js-version", "provide-version", "find-version"]
content = """
Determining your discord.js version:
‚Ä¢ `npm list discord.js`
‚Ä¢ Make sure you use the right [documentation](<https://discord.js.org/#/docs>) for your installed version (selector on the left)
"""

[token]
keywords = ["token", "client-secret", "invalid-token", "secret", "incorrect-login-details", "incorrect-login"]
content = """
Finding your bot token:
‚Ä¢ Visit the [application dashboard](<https://discord.com/developers/applications/me>) and select your application
‚Ä¢ Navigate to the Bot tab (not General Information, not OAuth2)!
‚Ä¢ Click `Reset Token` and copy token | https://i.imgur.com/c12eP0t.png (image)
Note: Remember to change the token in your application after you reset it
"""

[promise]
keywords = ["promise", "promises", "async/await", "await", "async", "await-is-only-valid-in-async-function"]
content = """
Resources to understand Promise:
‚Ä¢ MDN: [learn more](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises>)
‚Ä¢ Guide: [learn more](<https://discordjs.guide/additional-info/async-await.html>)
‚Ä¢ JavaScript info: [learn more](<https://javascript.info/async-await>)
"""
hoisted = true

[embed-mentions]
keywords = ["embed-mentions", "embedmentions"]
content = """
Some parts of an embed will **not** properly resolve mentions (leave them in the `<@348607796335607817>` format):
‚Ä¢ Author name
‚Ä¢ Footer text
‚Ä¢ Embed title
‚Ä¢ Embed field name
"""

[not-discord]
keywords = ["not-discord", "trustandsafety", "contact", "billing", "discord", "tns", "support"]
content = """
We are not Discord, just some nerds who develop Discord bots!
‚Ä¢ [/report](<https://dis.gd/report>) reports (harassment/hacking/spam/abuse) and appeals
‚Ä¢ [/support](<https://dis.gd/support>) anything Discord related
‚Ä¢ [/billing](<https://dis.gd/billing>) payment/nitro
‚Ä¢ [/feedback](<https://dis.gd/feedback>) feedback/feature requests
"""

[docgen]
keywords = ["docgen", "doc-gen", "djs-docs"]
content = """
How we generate our documentation:
‚Ä¢ (1) Source code is run through the [docgen](<https://github.com/discordjs/docgen>) to parse JSDocs and Markdown files, generating a single JSON file with documentation data
‚Ä¢ (2) The output JSON file is named by the branch or tag name and committed to the docs branch of its corresponding repository
‚Ä¢ (3) The [website](<https://github.com/discordjs/website>) pulls a list of branches and tags from GitHub, with the repo being specified in a [DataSource](<https://github.com/discordjs/website/tree/main/src/data>)
‚Ä¢ (4) The website downloads the JSON file from the docs branch for the selected tag/branch, then parses and displays it
"""

[slash-limits]
keywords = ["slash-limits", "/limits", "slash-command-limits"]
content = """
Slash command limits:
‚Ä¢ [Discord Developer Documentation](<https://discord.com/developers/docs/interactions/application-commands#registering-a-command>) 
"""

[equals]
keywords = ["equals", "=", "==", "===", "equaltypes", "equal-types"]
content = """
In JavaScript, = is used for assignment, == for loose equality, and === for strict equality checks. 
```js
x = 1; // assigning x to a value
'1' == 1 // true
'1' === 1 // false
```
‚Ä¢ Equality and sameness in JavaScript: [learn more](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness>)
"""

[timers]
keywords = ["timers", "settimouet", "set-timeout", "interval", "set-interval", "immediate", "set-immediate", "node-timers"]
content = """
Controlling the flow of time in Node.js:
‚Ä¢ Guide on base Node.js timers: [learn more](<https://nodejs.org/en/docs/guides/timers-in-node/>)
"""

[paste-code]
keywords = ["paste-code", "bins", "code-bins", "codepaste", "bin"]
content = """
To share long code snippets use a service like [gist](<https://gist.github.com>), [sourcebin](<https://sourceb.in>), [starbin](<https://starb.in>), or similar instead of posting them as large code blocks.
"""

[frameworks]
keywords = ["frameworks", "framework", "discord.js-framework", "djs-framework", "djs-frameworks"]
content = """
Currently the only actively maintained and updated framework is [Sapphire](<https://github.com/sapphiredev/framework>)
"""

[inequality]
keywords = ["inequality", "!==", "!="]
content = """
Checking for things to not be equal in JavaScript:
```diff
- if (!yourVariable === yourOtherVariable) // !yourVariable is coerced to a boolean value
+ if (yourVariable !== yourOtherVariable) // checks that one is not equal to the other
```
‚Ä¢ Comparison operators in JavaScript: [learn more](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Comparison>)
"""

[member-user]
keywords = ["member-user", "memberuser", "user-member", "usermember"]
content = """
Despite sounding similar there is a distinct difference between users and members in Discord:
‚Ä¢ [User](<https://discord.js.org/#/docs/discord.js/stable/class/User>): global Discord user data (global avatar, username, tag, id) 
‚Ä¢ [GuildMember](<https://discord.js.org/#/docs/discord.js/stable/class/GuildMember>): user data associated to a guild (guild, nickname, roles, voice, guild avatar, etc.)
‚Ä¢ Conversion: [User ‚ûû GuildMember](<https://discord.js.org/#/docs/discord.js/stable/class/GuildMemberManager?scrollTo=fetch>) | [GuildMember ‚ûû User](<https://discord.js.org/#/docs/discord.js/stable/class/GuildMember?scrollTo=user>)
"""

[linter]
keywords = ["linter", "lint", "eslint", "jslint"]
content = """
"Lint, or a linter, is a tool that analyzes source code to flag programming errors, bugs, stylistic errors, and suspicious constructs." 
‚Ä¢ Set up a linter in your development environment: [learn more](<https://discordjs.guide/preparations/setting-up-a-linter.html>)
"""

[voice-timeout]
keywords = ["voice-timeout", "voice-connection-timeout", "vct"]
content = """
`Error [VoiceConnectionTimeout]: Connection not established within 15 seconds.`
Make sure you have provided the `GuildVoiceStates` intent to the client:
```js
const { Client, GatewayIntentBits } = require('discord.js');
const client = new Client({
    intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.GuildVoiceStates]
});
```
"""

[third-party-libraries]
keywords = ["third-party-libraries", "discord-buttons", "discordbuttons", "discord-modals", "discordmodals"]
content = """
**We do not provide any help with third party libraries**
Buttons and Modals are supported natively.
‚Ä¢ Buttons: [learn more](<https://discordjs.guide/interactions/buttons.html>)
‚Ä¢ Modals: [learn more](<https://discordjs.guide/interactions/modals.html>)
"""

[find-id]
keywords = ["find-id", "find-by-id", "id-find", "fbi"]
content = """
Don't use the find method to query a [Collection](<https://discord.js.org/#/docs/collection/stable/class/Collection>) by key (mostly the associated id)
```diff
- someCollection.find(structure => structure.id === "348607796335607817")
+ someCollection.get("348607796335607817")
```
"""

[no-work]
keywords = ["no-work", "doesn't-work", "not-working", "no-context", "3w", "dnw"]
content = """
To help you we need more information:
‚Ä¢ What are you trying to do?
‚Ä¢ What is your code?
‚Ä¢ What errors and debug logs do you have?
"""
hoisted = true

[regex]
keywords = ["regex", "regexp", "regular-expressions", "regularexpressions"]
content = """
Regular expressions can make parsing and validating strings effortless:
‚Ä¢ Beginner guide: [learn more](<https://blog.bitsrc.io/9c58feb27eb4>)
‚Ä¢ Online Tester/Debugger: [regex101](<https://regex101.com>) | [regexr](<http://regexr.com>) | [debuggex](<https://www.debuggex.com>)
‚Ä¢ Interactive Guide: [learn more](<https://regexone.com>)
"""

[debug]
keywords = ["debug", "debug-listeners"]
content = """
Please add the following code to your code base outside of any other event listeners and provide the full log output relevant to your issue.
```js
client
    .on("debug", console.log)
    .on("warn", console.log)
```
‚Ä¢ Note: if you initialize your Client as `bot` or other identifiers you need to use these instead of `client`
‚Ä¢ If the output is too long to post consider using a bin instead: [gist](<https://gist.github.com>) | [paste.gg](<https://paste.gg/>) | [sourceb.in](<https://sourceb.in>) | [hastebin](<https://hastebin.com>)
"""
hoisted = true

[install]
keywords = ["install", "discord.js-stable", "install-stable", "djs-stable", "install-djs"]
content = """
To install run: `npm install discord.js`
‚Ä¢ Documentation: [learn more](<https://discord.js.org/#/docs/discord.js/stable/general/welcome>)
‚Ä¢ Guide: [learn more](<https://discordjs.guide>)
"""
hoisted = true

[token-anatomy]
keywords = ["token-anatomy", "token-parts", "tokenparts", "tokenformat", "token-breakdown", "tokenbreakdown"]
content = """
https://i.imgur.com/7WdehGn.png
"""

[tag-username]
keywords = ["tag-username", "tagusername", "tag-username-difference"]
content = """
[user.username](<https://discord.js.org/#/docs/discord.js/stable/class/User?scrollTo=username>) ‚ûû `d.js docs`
[user.discriminator](<https://discord.js.org/#/docs/discord.js/stable/class/User?scrollTo=discriminator>) ‚ûû `1083`
[user.tag](<https://discord.js.org/#/docs/discord.js/stable/class/User?scrollTo=tag>) ‚ûû `d.js docs#1083`
"""

[boost-event]
keywords = ["boost-event", "boost", "boostevent"]
content = """
The Discord API does not provide a dedicated event for guild boosts, but you can check for it in the [guildMemberUpdate](<https://discord.js.org/#/docs/discord.js/stable/class/Client?scrollTo=e-guildMemberUpdate>) event:
```js
client.on("guildMemberUpdate", (oldMember, newMember) => {
    // Check if the member wasn't boosting before, but is now.
    if (!oldMember.premiumSince && newMember.premiumSince) {
        // Member started boosting.
    }
});
```
"""

[self-invite]
keywords = ["self-invite", "selfinvite", "backdoor"]
content = """
Discord does not condone bots creating invites without the expressed consent of the guild owner/admins. [source (Discord Developer Policy)](<https://discord.com/developers/docs/policy>)
> *You may not use the APIs in any way to [...] process Discord Data in a way that surprises or violates Discord users' expectations.*
‚Ä¢ If you are experiencing problems with a particular guild, have your bot leave and/or blacklist it
"""

[selfbots]
keywords = ["selfbots", "selfbot", "userbot", "userbots"]
content = """
> **Do not use self-bots or user-bots**. Each account must be associated with a human, not a bot. Self-bots put strain on Discord's infrastructure and our ability to run our services. For more information, you can read our Developer Policies [here](<https://discord.com/developers/docs/policy>).
‚Ä¢ [source](<https://discord.com/guidelines>)
"""

[parse-emojis]
keywords = ["parse-emojis", "emoji-regex", "em-regex", "regexemoji", "regex-emoji"]
content = """
‚Ä¢ For unicode emojis (twemoji): [learn more](<https://github.com/twitter/twemoji/blob/v12.0.1/2/twemoji.js#L228>)
‚Ä¢ Custom emojis: `/<?(a)?:?(\\w{2,32}):(\\d{17,19})>?/`  [learn more](<https://discordapp.com/developers/docs/reference#message-formatting>)
"""

[hacktober]
keywords = ["hacktober", "doshirt", "wantshirt", "dotree", "üå≥", "üéÉ"]
content = """
"Hacktober" contribute to open source, get a shirt or plant a tree: [learn more](<https://hacktoberfest.digitalocean.com>)
‚Ä¢ low-effort PRs will be invalidated, as will PR-farm repositories
"""

[delete-timeout]
keywords = ["delete-timeout", "deletetimeout", "delete", "message#delete"]
content = """
The timeout option has been removed from the [Message#delete](<https://discord.js.org/#/docs/discord.js/stable/class/Message?scrollTo=delete>) method.
```diff
- message.delete(5000)
- message.delete({ timeout: 5000 })
+ setTimeout(() => { message.delete() }, 5000)
```
"""

[embed-files]
keywords = ["embed-files"]
content = """
`MessageEmbed#attachFiles` has been removed. Files should be attached via the message option object instead:
```diff
  const attachment = new MessageAttachment('./image.png', 'image1.png');
  const embed = new MessageEmbed()
-   .attachFiles([attachment])
    .setTitle('Attachments')
    .setImage(`attachment://${attachment.name}`);

- channel.send(embed)
+ channel.send({
+   embeds: [embed],
+   files: [attachment]
+ });
```
"""

[api-spam]
keywords = ["api-spam", "api-abuse", "rainbow-roles", "rainbowroles", "spam"]
content = """
Ratelimits are dynamically assigned by the API based on current load and may change at any point.
‚Ä¢ The scale from okay to API-spam is sliding and depends heavily on the action you are taking
‚Ä¢ Rainbow roles, clock and counter channels, and DM'ing advertisements to all members are all examples of things that are not okay
"""

[abort]
keywords = ["abort", "abort-error"]
content = """
`AbortError: The user aborted a request.`
A request took longer than the specified [restRequestTimeout](<https://discord.js.org/#/docs/discord.js/stable/typedef/ClientOptions>) (15 seconds default), and was aborted to not lock up the request handler.
‚Ä¢ This can be caused by an internal server error on Discord's side, or just a slow connection.
‚Ä¢ In case of a slow connection, the `restRequestTimeout` option in [ClientOptions](<https://discord.js.org/#/docs/discord.js/stable/typedef/ClientOptions>) can be increased to prevent future AbortErrors.
"""

[v14-changes]
keywords = ["v14-changes", "changes", "v14", "14"]
content = """
Version 14 has released! Please update at your earliest convenience.
‚Ä¢ Update: `npm rm discord.js` `npm i discord.js`
‚Ä¢ [Update guide](<https://discordjs.guide/additional-info/changes-in-v14.html>) (use `CTRL` + `F` to search for the old method or property)
"""
hoisted = true

[filter]
keywords = ["filter"]
content = """
The filter for collectors has moved into the options:
```diff
- const collector = message.createReactionCollector(filter, { ...options });
+ const collector = message.createReactionCollector({ filter, ...options });
```
"""

[event-removal]
keywords = ["event-removal", "messageCreate", "interactionCreate"]
content = """
The `message` and `interaction` events were renamed to `messageCreate` and `interactionCreate` respectively, to bring the library in line with Discord's naming conventions.

```diff
- client.on('message', message => { ... });
+ client.on('messageCreate', message => { ... });
- client.on('interaction', interaction => { ... });
+ client.on('interactionCreate', interaction => { ... });
```
"""

[intents]
keywords = ["intents", "no-members"]
content = """
‚Ä¢ Websocket intents limit events and decrease memory usage: [learn more](<https://discordjs.guide/popular-topics/intents.html>)
‚Ä¢ See what intents you need [here](<https://discord.com/developers/docs/topics/gateway#list-of-intents>)
"""

[privileged-intents]
keywords = ["privileged-intents", "privileged", "p-intents", "whitelisted-intents"]
content = """
`Error [DisallowedIntents]: Privileged intent provided is not enabled or whitelisted.`

If you are using the `GuildMembers`, `GuildPresences`, or `MessageContent` intents, you need to enable them in the developer portal:
‚Ä¢ [Developer Portal](<https://discord.com/developers/applications>) > Your app > Bot > Privileged Gateway Intents
"""

[collection-array]
keywords = ["collection-array", "cta", "collection-to-array"]
content = """
**Converting a Collection to an array**
You only need to convert it to an array if you need the index of an entry:
‚Ä¢ Iteration (looping) is possible with [`for...of`](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of#iterating_over_a_map>) over [`Collection#values`](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values>) or [`forEach`](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach>)
‚Ä¢ You can transform a Collection to an array with [`Collection#map`](<https://discord.js.org/#/docs/collection/stable/class/Collection?scrollTo=map>)
‚Ä¢ If you need indices, you can get the array using [`[...collection.values()]`](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values>)
"""

[member-count]
keywords = ["member-count", "user-count", "uc"]
content = """
**Getting your bot's member count**
‚Ä¢ `client.users.cache.size` is unreliable because it will only return *cached* users
‚Ä¢ The preferred method is using [`collection.reduce()`](<https://discord.js.org/#/docs/collection/stable/class/Collection?scrollTo=reduce>) on `client.guilds.cache`
```js
client.guilds.cache.reduce((acc, guild) => acc + guild.memberCount, 0)
```
"""

[add-to-server-button]
keywords = ["add-to-server-button", "add-to-server", "ats", "profile-invite", "authorization-link", "auth-link"]
content = """
**"Add to Server" button**
‚Ä¢ [Developer Portal](<https://discord.com/developers/applications>) > Your app > OAuth2 (General) > Default Authorization Link
‚Ä¢ Set authorization method to "In-app Authorization"
‚Ä¢ Check scopes `bot` and `applications.commands`

Image: https://i.imgur.com/taMHw7o.png
"""

[author-footer]
keywords = ["author-footer", "footer", "author", "setFooter", "setAuthor"]
content = """
`v13` `<MessageEmbed>.setFooter()` and `<MessageEmbed>.setAuthor()` now each take an object:
```diff
- embed.setAuthor('This is an example text', 'https://example.com/icon.png', 'https://websiteofauthor.com')
+ embed.setAuthor({ name: 'This is an example text', url: 'https://websiteofauthor.com', iconURL: 'https://example.com/icon.png' })

- embed.setFooter('This is an example text', 'https://example.com/icon.png')
+ embed.setFooter({ text: 'This is an example text', iconURL: 'https://example.com/icon.png' })
```
"""

[already-acknowledged]
keywords = ["already-acknowledged", "interaction-acknowledged", "already-replied"]
content = """
‚Ä¢ `DiscordAPIError: Interaction has already been acknowledged`
‚Ä¢ `[InteractionAlreadyReplied]: The reply to this interaction has already been sent or deferred.`

You have already replied to the interaction.
‚Ä¢ Use `<Interaction>.followUp()` to send a new message
‚Ä¢ If you deferred reply it's better to use `<Interaction>.editReply()`
‚Ä¢ Responding to [slash commands](<https://discordjs.guide/slash-commands/response-methods.html>) / [buttons](<https://discordjs.guide/interactions/buttons.html#responding-to-buttons>) / [select menus](<https://discordjs.guide/interactions/select-menus.html#responding-to-select-menus>)
"""

[djs-sponsor]
keywords = ["djs-sponsor", "sponsor", "sponsor-role"]
content = """
Like what we do and want to put some money behind it? Donate to discord.js and rep your support with a role on our support server:
‚Ä¢ [OpenCollective](<https://opencollective.com/discordjs>): Use </claim-sponsor:1046604458991300619> and provide your OC slug *(Settings > Info > URL slug)*
‚Ä¢ [GitHub Sponsors](<https://github.com/sponsors/discordjs>):
**1)** Create a private [gist](<https://gist.github.com/>)
**2)** Include your Discord tag (`d.js docs#1083`) or user ID (`348607796335607817`)
**3)** Include your Transaction id or screenshot of the donation
**4)** Send the link to the gist to <@81440962496172032> (`Crawl#0002`) via direct message
"""

[duplicate-commands]
keywords = ["duplicate-commands", "double-commands", "guild-command", "global-command"]
content = """
If you have duplicate commands on your server, you registered both global and guild commands. 

You can remove the duplicates by resetting either the global or guild commands
‚Ä¢ Resetting global commands: `rest.put(Routes.applicationCommands(clientId), { body: [] })`
‚Ä¢ Resetting guild commands: `rest.put(Routes.applicationGuildCommands(clientId, guildId), { body: [] })`
"""

[no-content]
keywords = ["no-content", "nocontent", "message-content", "messagecontent"]
content = """
If you aren't getting content, embeds or attachments of a message, make sure you have the `MessageContent` intent [enabled in the Developer Portal](<https://discord.com/developers/applications>) and provide it to your client:

```js
const { Client, GatewayIntentBits } = require('discord.js');
const client = new Client({
    intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent]
});
```
"""

[case]
keywords = ["case", "snaketopascal", "change-case", "changecase"]
content = """
`RangeError [BitFieldInvalid]: Invalid bitfield flag or number: undefined`
‚Ä¢ All `SCREAMING_SNAKE_CASE` enums have been changed to `PascalCase`
‚Ä¢ Intents: `Intents.FLAGS.GUILD_MESSAGES` -> `GatewayIntentBits.GuildMessages`
‚Ä¢ Permissions: `Permissions.FLAGS.SEND_MESSAGES` -> `PermissionFlagsBits.SendMessages`
"""

[dm-messages]
keywords = ["dm-messages", "receive-dms", "not-getting-dms", "not-getting-dms"]
content = """
To receive direct message events on `"messageCreate"` with your bot, you will need:
‚Ä¢ The `DirectMessages` [gateway intent](<https://discordjs.guide/popular-topics/intents>)
‚Ä¢ The `Channel` [partial setting](<https://discordjs.guide/popular-topics/partials>)
"""

[all-intents]
keywords = ["all-intents", "98303", "32767", "magic-intents", "magic-all-intent"]
content = """
We highly recommend only specifying the [intents](<https://discordjs.guide/popular-topics/intents>) you actually need.
‚Ä¢ Note, that `98303`, `32767` or whatever other magic number you read that represents "all intents", gets outdated as soon as new intents are introduced.
‚Ä¢ The number will always represent the same set of intents, and will not include new ones. There is no magic "all intents" bit.
"""

[manager-functions]
keywords = ["manager-functions", "structureless-actions", "no-need-to-fetch", "no-fetch"]
content = """
If you only have the id for a structure you can often avoid fetching it before taking an action on it
‚Ä¢ Managers have functions to directly target the API while providing the id
‚Ä¢ Examples: `guild.members.ban("348607796335607817")`, `channel.messages.edit("348607796335607817", "new content")`
"""

[channel-typeguards]
keywords = ["channel-typeguards", "narrow-channel-types", "narrow-types"]
content = """
Instead of using method-based type guard functions, you can narrow channel types with the `.type` property
```diff
- channel.isText()
+ channel.type === ChannelType.GuildText
```
"""

[member-fetch-timeout]
keywords = ["member-fetch-timeout", "member-timeout", "member-fetch-timeout"]
content = """
Fetching members can time out on large guilds, as they arrive in chunks through the WebSocket connections.
‚Ä¢ You can specify the `time` option in `FetchMembersOptions` to specify how long you want to wait.
‚Ä¢ Make sure you have the required `GuildMembers` [gateway intent](<https://discordjs.guide/popular-topics/intents>) enabled
"""

[custom-client-properties]
keywords = ["custom-client-properties", "custom-properties-on-client"]
content = """
We highly recommend you extend the `Client` structure properly instead of just attaching custom properties like `.commands` to the regular discord.js `Client` instance.
‚Ä¢ Using typescript, you might want to consider [casting](<https://www.typescripttutorial.net/typescript-tutorial/type-casting/>) or [augmenting the module type](<https://www.typescriptlang.org/docs/handbook/modules.html#ambient-modules>)
"""

[components-per-message]
keywords = ["components-per-message", "message-component-collector", "collecting-on-message"]
content = """
If you are waiting for button or select menu input from a specific message, don't create the collector on the channel.
‚Ä¢ Channel collectors return component interactions for any component within that channel.
```diff
- <Channel>.createMessageComponentCollector(‚Ä¶)
+ <Message>.createMessageComponentCollector(‚Ä¶)
```
"""

[generic-actionrow]
keywords = ["generic-actionrow", "generic-builder", "component-builder", "generic-actionrowbuilder"]
content = """
In TypeScript the `ActionRowBuilder` class has a generic type parameter that specifies the type of component the action row holds:
```ts
const row = new ActionRowBuilder<ButtonBuilder>().addComponents(button)
const row = new ActionRowBuilder<SelectMenuBuilder>().addComponents(selectMenu)
const row = new ActionRowBuilder<TextInputBuilder>().addComponents(textInput)
```
"""
